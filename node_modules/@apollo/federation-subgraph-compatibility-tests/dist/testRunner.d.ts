export declare const TESTS: {
    assertion: string;
    column: string;
    fedVersion: number;
    required: boolean;
}[];
export declare function runJest(productsUrl: string): Promise<JestResults>;
export interface TestResultDetails {
    name: string;
    fullName?: string;
    version?: string;
    language?: string;
    documentation: string;
    description?: string;
    type?: string;
    stargazerCount?: string;
    lastRelease?: string;
    dependencies?: {
        name: string;
        url: string;
        version: string;
    }[];
    repository?: RepositoryInformation;
    coreLibrary?: RepositoryInformation;
    federationLibrary?: RepositoryInformation;
    started: boolean;
    tests: TestResults;
}
export interface RepositoryInformation {
    name: string;
    owner?: string;
    maintainer?: string;
    link: string;
}
export interface TestResults {
    [name: string]: {
        success: boolean;
        caveat?: string;
    };
}
export interface JestAssertionResult {
    failureMessages: string[];
    fullName: string;
    status: 'failed' | 'passed';
    title: string;
}
export interface JestJSONOutput {
    numFailedTestSuites: number;
    numFailedTests: number;
    numPassedTestSuites: number;
    numPassedTests: number;
    numPendingTestSuites: number;
    numPendingTests: number;
    numRuntimeErrorTestSuites: number;
    numTodoTests: number;
    numTotalTestSuites: number;
    numTotalTests: number;
    success: boolean;
    testResults: {
        name: string;
        status: 'failed' | 'passed';
        summary: string;
        message: string;
        assertionResults: JestAssertionResult[];
    }[];
}
export interface JestResults {
    rawResults: JestJSONOutput;
    assertions: JestAssertionResult[];
    assertionPassed: (name: string) => boolean;
}
//# sourceMappingURL=testRunner.d.ts.map