{"version":3,"file":"99.index.js","mappings":";;;;;;;;;;AAAA;AACA;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzsources":[".././node_modules/@apollo/server/dist/esm/generated/packageVersion.js",".././node_modules/@apollo/server/dist/esm/plugin/landingPage/default/getEmbeddedHTML.js",".././node_modules/@apollo/server/dist/esm/plugin/landingPage/default/index.js",".././node_modules/uuid/wrapper.mjs"],"sourcesContent":["export const packageVersion = \"4.9.3\";\n//# sourceMappingURL=packageVersion.js.map","function getConfigStringForHtml(config) {\n    return JSON.stringify(config)\n        .replace('<', '\\\\u003c')\n        .replace('>', '\\\\u003e')\n        .replace('&', '\\\\u0026')\n        .replace(\"'\", '\\\\u0027');\n}\nexport const getEmbeddedExplorerHTML = (explorerCdnVersion, config, apolloServerVersion, nonce) => {\n    const productionLandingPageEmbedConfigOrDefault = {\n        displayOptions: {},\n        persistExplorerState: false,\n        runTelemetry: true,\n        ...(typeof config.embed === 'boolean' ? {} : config.embed),\n    };\n    const embeddedExplorerParams = {\n        graphRef: config.graphRef,\n        target: '#embeddableExplorer',\n        initialState: {\n            ...('document' in config || 'headers' in config || 'variables' in config\n                ? {\n                    document: config.document,\n                    headers: config.headers,\n                    variables: config.variables,\n                }\n                : {}),\n            ...('collectionId' in config\n                ? {\n                    collectionId: config.collectionId,\n                    operationId: config.operationId,\n                }\n                : {}),\n            displayOptions: {\n                ...productionLandingPageEmbedConfigOrDefault.displayOptions,\n            },\n        },\n        persistExplorerState: productionLandingPageEmbedConfigOrDefault.persistExplorerState,\n        includeCookies: config.includeCookies,\n        runtime: apolloServerVersion,\n        runTelemetry: productionLandingPageEmbedConfigOrDefault.runTelemetry,\n        allowDynamicStyles: false,\n    };\n    return `\n<div class=\"fallback\">\n  <h1>Welcome to Apollo Server</h1>\n  <p>Apollo Explorer cannot be loaded; it appears that you might be offline.</p>\n</div>\n<style nonce=${nonce}>\n  iframe {\n    background-color: white;\n    height: 100%;\n    width: 100%;\n    border: none;\n  }\n  #embeddableExplorer {\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    top: 0;\n  }\n</style>\n<div id=\"embeddableExplorer\"></div>\n<script nonce=\"${nonce}\" src=\"https://embeddable-explorer.cdn.apollographql.com/${encodeURIComponent(explorerCdnVersion)}/embeddable-explorer.umd.production.min.js?runtime=${encodeURIComponent(apolloServerVersion)}\"></script>\n<script nonce=\"${nonce}\">\n  var endpointUrl = window.location.href;\n  var embeddedExplorerConfig = ${getConfigStringForHtml(embeddedExplorerParams)};\n  new window.EmbeddedExplorer({\n    ...embeddedExplorerConfig,\n    endpointUrl,\n  });\n</script>\n`;\n};\nexport const getEmbeddedSandboxHTML = (sandboxCdnVersion, config, apolloServerVersion, nonce) => {\n    const localDevelopmentEmbedConfigOrDefault = {\n        runTelemetry: true,\n        endpointIsEditable: false,\n        initialState: {},\n        ...(typeof config.embed === 'boolean' ? {} : config.embed ?? {}),\n    };\n    const embeddedSandboxConfig = {\n        target: '#embeddableSandbox',\n        initialState: {\n            ...('document' in config || 'headers' in config || 'variables' in config\n                ? {\n                    document: config.document,\n                    variables: config.variables,\n                    headers: config.headers,\n                }\n                : {}),\n            ...('collectionId' in config\n                ? {\n                    collectionId: config.collectionId,\n                    operationId: config.operationId,\n                }\n                : {}),\n            includeCookies: config.includeCookies,\n            ...localDevelopmentEmbedConfigOrDefault.initialState,\n        },\n        hideCookieToggle: false,\n        endpointIsEditable: localDevelopmentEmbedConfigOrDefault.endpointIsEditable,\n        runtime: apolloServerVersion,\n        runTelemetry: localDevelopmentEmbedConfigOrDefault.runTelemetry,\n        allowDynamicStyles: false,\n    };\n    return `\n<div class=\"fallback\">\n  <h1>Welcome to Apollo Server</h1>\n  <p>Apollo Sandbox cannot be loaded; it appears that you might be offline.</p>\n</div>\n<style nonce=${nonce}>\n  iframe {\n    background-color: white;\n    height: 100%;\n    width: 100%;\n    border: none;\n  }\n  #embeddableSandbox {\n    width: 100vw;\n    height: 100vh;\n    position: absolute;\n    top: 0;\n  }\n</style>\n<div id=\"embeddableSandbox\"></div>\n<script nonce=\"${nonce}\" src=\"https://embeddable-sandbox.cdn.apollographql.com/${encodeURIComponent(sandboxCdnVersion)}/embeddable-sandbox.umd.production.min.js?runtime=${encodeURIComponent(apolloServerVersion)}\"></script>\n<script nonce=\"${nonce}\">\n  var initialEndpoint = window.location.href;\n  var embeddedSandboxConfig = ${getConfigStringForHtml(embeddedSandboxConfig)};\n  new window.EmbeddedSandbox(\n    {\n      ...embeddedSandboxConfig,\n      initialEndpoint,\n    }\n  );\n</script>\n`;\n};\n//# sourceMappingURL=getEmbeddedHTML.js.map","import { getEmbeddedExplorerHTML, getEmbeddedSandboxHTML, } from './getEmbeddedHTML.js';\nimport { packageVersion } from '../../../generated/packageVersion.js';\nimport { createHash } from '@apollo/utils.createhash';\nimport { v4 as uuidv4 } from 'uuid';\nexport function ApolloServerPluginLandingPageLocalDefault(options = {}) {\n    const { version, __internal_apolloStudioEnv__, ...rest } = {\n        embed: true,\n        ...options,\n    };\n    return ApolloServerPluginLandingPageDefault(version, {\n        isProd: false,\n        apolloStudioEnv: __internal_apolloStudioEnv__,\n        ...rest,\n    });\n}\nexport function ApolloServerPluginLandingPageProductionDefault(options = {}) {\n    const { version, __internal_apolloStudioEnv__, ...rest } = options;\n    return ApolloServerPluginLandingPageDefault(version, {\n        isProd: true,\n        apolloStudioEnv: __internal_apolloStudioEnv__,\n        ...rest,\n    });\n}\nfunction encodeConfig(config) {\n    return JSON.stringify(encodeURIComponent(JSON.stringify(config)));\n}\nconst getNonEmbeddedLandingPageHTML = (cdnVersion, config, apolloServerVersion, nonce) => {\n    const encodedConfig = encodeConfig(config);\n    return `\n <div class=\"fallback\">\n  <h1>Welcome to Apollo Server</h1>\n  <p>The full landing page cannot be loaded; it appears that you might be offline.</p>\n</div>\n<script nonce=\"${nonce}\">window.landingPage = ${encodedConfig};</script>\n<script nonce=\"${nonce}\" src=\"https://apollo-server-landing-page.cdn.apollographql.com/${encodeURIComponent(cdnVersion)}/static/js/main.js?runtime=${apolloServerVersion}\"></script>`;\n};\nfunction ApolloServerPluginLandingPageDefault(maybeVersion, config) {\n    const version = maybeVersion ?? '_latest';\n    const apolloServerVersion = `@apollo/server@${packageVersion}`;\n    const scriptSafeList = [\n        'https://apollo-server-landing-page.cdn.apollographql.com',\n        'https://embeddable-sandbox.cdn.apollographql.com',\n        'https://embeddable-explorer.cdn.apollographql.com',\n    ].join(' ');\n    const styleSafeList = [\n        'https://apollo-server-landing-page.cdn.apollographql.com',\n        'https://embeddable-sandbox.cdn.apollographql.com',\n        'https://embeddable-explorer.cdn.apollographql.com',\n        'https://fonts.googleapis.com',\n    ].join(' ');\n    const iframeSafeList = [\n        'https://explorer.embed.apollographql.com',\n        'https://sandbox.embed.apollographql.com',\n        'https://embed.apollo.local:3000',\n    ].join(' ');\n    return {\n        __internal_installed_implicitly__: false,\n        async serverWillStart(server) {\n            if (config.precomputedNonce) {\n                server.logger.warn(\"The `precomputedNonce` landing page configuration option is deprecated. Removing this option is strictly an improvement to Apollo Server's landing page Content Security Policy (CSP) implementation for preventing XSS attacks.\");\n            }\n            return {\n                async renderLandingPage() {\n                    const encodedVersion = encodeURIComponent(version);\n                    async function html() {\n                        const nonce = config.precomputedNonce ??\n                            createHash('sha256').update(uuidv4()).digest('hex');\n                        const scriptCsp = `script-src 'self' 'nonce-${nonce}' ${scriptSafeList}`;\n                        const styleCsp = `style-src 'nonce-${nonce}' ${styleSafeList}`;\n                        const imageCsp = `img-src https://apollo-server-landing-page.cdn.apollographql.com`;\n                        const manifestCsp = `manifest-src https://apollo-server-landing-page.cdn.apollographql.com`;\n                        const frameCsp = `frame-src ${iframeSafeList}`;\n                        return `\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"Content-Security-Policy\" content=\"${scriptCsp}; ${styleCsp}; ${imageCsp}; ${manifestCsp}; ${frameCsp}\" />\n    <link\n      rel=\"icon\"\n      href=\"https://apollo-server-landing-page.cdn.apollographql.com/${encodedVersion}/assets/favicon.png\"\n    />\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Source+Sans+Pro&display=swap\"\n      rel=\"stylesheet\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta name=\"description\" content=\"Apollo server landing page\" />\n    <link\n      rel=\"apple-touch-icon\"\n      href=\"https://apollo-server-landing-page.cdn.apollographql.com/${encodedVersion}/assets/favicon.png\"\n    />\n    <link\n      rel=\"manifest\"\n      href=\"https://apollo-server-landing-page.cdn.apollographql.com/${encodedVersion}/manifest.json\"\n    />\n    <title>Apollo Server</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"react-root\">\n      <style nonce=${nonce}>\n        body {\n          margin: 0;\n          overflow-x: hidden;\n          overflow-y: hidden;\n        }\n        .fallback {\n          opacity: 0;\n          animation: fadeIn 1s 1s;\n          animation-iteration-count: 1;\n          animation-fill-mode: forwards;\n          padding: 1em;\n        }\n        @keyframes fadeIn {\n          0% {opacity:0;}\n          100% {opacity:1; }\n        }\n      </style>\n    ${config.embed\n                            ? 'graphRef' in config && config.graphRef\n                                ? getEmbeddedExplorerHTML(version, config, apolloServerVersion, nonce)\n                                : !('graphRef' in config)\n                                    ? getEmbeddedSandboxHTML(version, config, apolloServerVersion, nonce)\n                                    : getNonEmbeddedLandingPageHTML(version, config, apolloServerVersion, nonce)\n                            : getNonEmbeddedLandingPageHTML(version, config, apolloServerVersion, nonce)}\n    </div>\n  </body>\n</html>\n          `;\n                    }\n                    return { html };\n                },\n            };\n        },\n    };\n}\n//# sourceMappingURL=index.js.map","import uuid from './dist/index.js';\nexport const v1 = uuid.v1;\nexport const v3 = uuid.v3;\nexport const v4 = uuid.v4;\nexport const v5 = uuid.v5;\nexport const NIL = uuid.NIL;\nexport const version = uuid.version;\nexport const validate = uuid.validate;\nexport const stringify = uuid.stringify;\nexport const parse = uuid.parse;\n"],"names":[],"sourceRoot":""}