"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const graphql_1 = require("graphql");
const client_1 = require("../utils/client");
describe('@interfaceObject', () => {
    test('verifies schema contains entity type marked as @interfaceObject', async () => {
        const serviceSDLQuery = await (0, client_1.productsRequest)({
            query: 'query { _service { sdl } }',
        });
        const { sdl } = serviceSDLQuery.data._service;
        const normalizedSDL = (0, graphql_1.stripIgnoredCharacters)(sdl);
        expect(normalizedSDL).toMatch(/type Inventory.*(@interfaceObject|@federation__interfaceObject)/);
        expect(normalizedSDL).toMatch(/type Inventory.*(@key|@federation__key)\(fields:"id"( resolvable:true)?\)/);
    });
    test('verifies @interfaceObject entity returns new fields', async () => {
        const resp = await (0, client_1.routerRequest)({
            query: `query ($id: ID!) { inventory(id: $id) { deprecatedProducts { sku reason } } }`,
            variables: { id: 'apollo-oss' },
        });
        expect(resp).not.toHaveProperty('errors');
        expect(resp).toMatchObject({
            data: {
                inventory: {
                    deprecatedProducts: [
                        {
                            sku: 'apollo-federation-v1',
                            reason: 'Migrate to Federation V2',
                        },
                    ],
                },
            },
        });
    });
});
//# sourceMappingURL=interfaceObject.test.js.map